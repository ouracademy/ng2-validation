0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish' ]
2 info using npm@3.8.3
3 info using node@v5.10.0
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'c:\\Users\\pc\\ng2-validation',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\pc\AppData\Roaming\npm-cache\ng2-custom-validation\1.2.2\package.tgz not in flight; packing
9 verbose correctMkdir C:\Users\pc\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
10 info lifecycle ng2-custom-validation@1.2.2~prepublish: ng2-custom-validation@1.2.2
11 silly lifecycle ng2-custom-validation@1.2.2~prepublish: no script for prepublish, continuing
12 verbose tar pack [ 'C:\\Users\\pc\\AppData\\Roaming\\npm-cache\\ng2-custom-validation\\1.2.2\\package.tgz',
12 verbose tar pack   'c:\\Users\\pc\\ng2-validation' ]
13 verbose tarball C:\Users\pc\AppData\Roaming\npm-cache\ng2-custom-validation\1.2.2\package.tgz
14 verbose folder c:\Users\pc\ng2-validation
15 verbose addLocalTarball adding from inside cache C:\Users\pc\AppData\Roaming\npm-cache\ng2-custom-validation\1.2.2\package.tgz
16 verbose correctMkdir C:\Users\pc\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
17 silly cache afterAdd ng2-custom-validation@1.2.2
18 verbose afterAdd C:\Users\pc\AppData\Roaming\npm-cache\ng2-custom-validation\1.2.2\package\package.json not in flight; writing
19 verbose correctMkdir C:\Users\pc\AppData\Roaming\npm-cache correctMkdir not in flight; initializing
20 verbose afterAdd C:\Users\pc\AppData\Roaming\npm-cache\ng2-custom-validation\1.2.2\package\package.json written
21 silly publish { name: 'ng2-custom-validation',
21 silly publish   version: '1.2.2',
21 silly publish   description: 'A simple validation library for angular 2',
21 silly publish   main: 'index.js',
21 silly publish   scripts:
21 silly publish    { start: 'tsc && concurrently "tsc -w" "lite-server" ',
21 silly publish      lite: 'lite-server',
21 silly publish      tsc: 'tsc',
21 silly publish      'tsc:w': 'tsc -w' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/ouracademy/ng2-validation.git' },
21 silly publish   keywords:
21 silly publish    [ 'angular 2',
21 silly publish      'ng2',
21 silly publish      'validation',
21 silly publish      'validate',
21 silly publish      'angular 2 validation messages',
21 silly publish      'ng2 validation messages' ],
21 silly publish   author:
21 silly publish    { name: 'Arthur Mauricio',
21 silly publish      email: 'this.arthur.email@gmail.com' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/ouracademy/ng2-validation/issues' },
21 silly publish   homepage: 'https://github.com/ouracademy/ng2-validation#readme',
21 silly publish   dependencies:
21 silly publish    { '@angular/common': '^2.3.1',
21 silly publish      '@angular/compiler': '^2.3.1',
21 silly publish      '@angular/core': '^2.3.1',
21 silly publish      '@angular/forms': '^2.3.1',
21 silly publish      'core-js': '^2.4.1',
21 silly publish      rxjs: '5.0.1',
21 silly publish      'zone.js': '^0.7.2',
21 silly publish      'reflect-metadata': '^0.1.9' },
21 silly publish   peerDependencies:
21 silly publish    { '@angular/common': '^2.3.1',
21 silly publish      '@angular/compiler': '^2.3.1',
21 silly publish      '@angular/core': '^2.3.1',
21 silly publish      '@angular/forms': '^2.3.1',
21 silly publish      'core-js': '^2.4.1',
21 silly publish      rxjs: '5.0.1',
21 silly publish      'zone.js': '^0.7.2',
21 silly publish      'reflect-metadata': '^0.1.9' },
21 silly publish   devDependencies:
21 silly publish    { '@types/core-js': '^0.9.34',
21 silly publish      '@types/node': '^6.0.45',
21 silly publish      '@angular/platform-browser': '~2.3.1',
21 silly publish      '@angular/platform-browser-dynamic': '~2.3.1',
21 silly publish      bootstrap: '^3.3.6',
21 silly publish      concurrently: '^3.0.0',
21 silly publish      'lite-server': '^2.2.2',
21 silly publish      systemjs: '0.19.39',
21 silly publish      typescript: '^2.0.3' },
21 silly publish   readme: '#ng2-custom-validation [![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][npm-url] \r\n\r\n[npm-downloads-image]: http://img.shields.io/npm/dm/ng2-custom-validation.svg?style=flat\r\n[npm-version-image]: http://img.shields.io/npm/v/ng2-custom-validation.svg?style=flat\r\n[npm-url]: https://www.npmjs.com/package/ng2-custom-validation\r\n\r\nA collection of classes to help handling display error messages on your form. (THIS PACKAGE IT\'S ON CONSTRUCTION)\r\n\r\n* [Reason](#reason)\r\n* [Installation](#installation)\r\n* [Usage](#usage)\r\n* [Validators](#validators)\r\n* [Customizing](#customizing)\r\n* [TODO](#todo)\r\n\r\n## Reason\r\n\r\nTired to always write this in your angular 2 app:\r\n```html\r\n<label for="name">Name</label>\r\n\r\n<input type="text" id="name" class="form-control"\r\n       required minlength="4" maxlength="24"\r\n       name="name" [(ngModel)]="hero.name"\r\n       #name="ngModel" >\r\n\r\n<div *ngIf="name.errors && (name.dirty || name.touched)"\r\n     class="alert alert-danger">\r\n    <div [hidden]="!name.errors.required">\r\n      Name is required\r\n    </div>\r\n    <div [hidden]="!name.errors.minlength">\r\n      Name must be at least 4 characters long.\r\n    </div>\r\n    <div [hidden]="!name.errors.maxlength">\r\n      Name cannot be more than 24 characters long.\r\n    </div>\r\n</div>\r\n\r\n```\r\n\r\nAnd repeat this to every field in every form in every view.\r\nThis package deals with it, using a uniform approach to make validation messages based on the amazing [Laravel framework](https://laravel.com/docs/5.3/validation#working-with-error-messages).\r\nSo you can instead do this: \r\n\r\n```html\r\n<label for="name">Name</label>\r\n<input type="text" id="name" class="form-control"\r\n       required minlength="4" maxlength="24"\r\n       name="name" [(ngModel)]="hero.name"\r\n       #name="ngModel" >\r\n<div *ngIf="errors.name" class="alert alert-danger">\r\n  {{ errors.name }}\r\n</div>\r\n```\r\n\r\nAnd it will do the same in very uniform way in all your fields in every forms in all your views. This package will create validation messages for you. It contains predefined validation messages, but you can customize it (see [customizing](#customizing)).\r\n\r\n## Installation\r\nInstall the npm module by running:\r\n```sh\r\nnpm install ng2-custom-validation --save\r\n```\r\n\r\n### Working with SystemJS\r\nAdd to your `systemjs.config.js`\r\n\r\n```js\r\nmap: {\r\n      // other stuff...\r\n      \'ng2-custom-validation\': \'npm:ng2-custom-validation\'\r\n    },\r\npackages: {\r\n    // other stuf...\r\n    \'ng2-custom-validation\': {\r\n        main: \'./index.js\',\r\n        defaultExtension: \'js\'\r\n    }\r\n}\r\n```\r\n\r\n## Usage\r\nThe steps here are very similar to the [ng2-translate](https://github.com/ocombe/ng2-translate) package, because it\'s based on it.\r\nAlternative you can see the [demo app](https://github.com/ouracademy/ng2-validation/tree/master/demo) to have a more detail of the usage.\r\n\r\n#### 1. Import the `ValidationMessagesModule`:\r\nIt is recommended to import `ValidationMessagesModule.forRoot()` in the NgModule of your application.\r\n\r\nThe `forRoot` method is a convention for modules that provide a singleton service (such as the Angular 2 Router), you can also use it to configure the `ValidationMessagesLoader` . By default it will use the `MessageStaticLoader` and will load predefined messages for you, but you can provide another loader instead as a parameter of this method (see [customizing](#customizing)).\r\n\r\n```ts\r\nimport { NgModule }      from \'@angular/core\';\r\nimport { BrowserModule } from \'@angular/platform-browser\';\r\nimport { HttpModule } from \'@angular/http\';\r\nimport { AppComponent }           from \'./app.component\';\r\nimport { ValidationMessagesModule } from \'ng2-custom-validation\';\r\n\r\n@NgModule({\r\n  imports: [\r\n    BrowserModule,\r\n    HttpModule,\r\n    HeroFormReactiveModule,\r\n    ValidationMessagesModule.forRoot()\r\n  ],\r\n  declarations: [ AppComponent ],\r\n  bootstrap:    [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\nIf you have multiple NgModules and you use one as a shared NgModule (that you import in all of your other NgModules), don\'t forget that you can use it to export the `ValidationMessagesModule` that you imported in order to avoid having to import it multiple times.\r\n\r\n```ts\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        HttpModule,\r\n        ValidationMessagesModule.forRoot()\r\n    ],\r\n    exports: [BrowserModule, HttpModule, ValidationMessagesModule],\r\n})\r\nexport class SharedModule {\r\n}\r\n```\r\n\r\n#### 2. Init the ValidationMessagesService for your application:\r\n```ts\r\nimport { Component, OnInit } from \'@angular/core\';\r\nimport { FormGroup, FormBuilder, Validators } from \'@angular/forms\';\r\nimport { MessageBag, ValidationMessagesService } from \'ng2-custom-validation\';\r\n\r\n@Component({\r\n    moduleId: module.id,\r\n    selector: \'hero-form-reactive3\',\r\n    templateUrl: \'hero-form.component.html\'\r\n})\r\nexport class HeroFormReactiveComponent implements OnInit {\r\n\r\n    errors: MessageBag = new MessageBag();\r\n    heroForm: FormGroup;\r\n\r\n    constructor(private fb: FormBuilder,\r\n        private validationMessagesService: ValidationMessagesService) { }\r\n        \r\n    ngOnInit(): void {\r\n        this.buildForm();\r\n    }\r\n    \r\n    buildForm(): void {\r\n        this.heroForm = this.fb.group({\r\n            \'name\': [\'\', [\r\n                Validators.required,\r\n                Validators.minLength(4),\r\n                Validators.maxLength(24)\r\n            ]]\r\n        });\r\n\r\n        this.validationMessagesService\r\n            .seeForErrors(this.heroForm)\r\n            .subscribe((errors: MessageBag) => {\r\n                this.errors = errors;\r\n            });\r\n    }\r\n\r\n```\r\n\r\n#### 3. Use it on your template:\r\n```html\r\n<label for="name">Name</label>\r\n<input id="name" type="text" class="form-control" required formControlName="name">\r\n<div *ngIf="errors.name" class="alert alert-danger">\r\n  {{ errors.name }}\r\n</div>\r\n```\r\n\r\n## Validators\r\nThis is the list of the supported validations (it will grow...)\r\n\r\n#### angular2 built-in validators\r\n\r\n- required\r\n- minlength\r\n- maxlength\r\n- pattern\r\n\r\n## Customizing\r\nThere are two ways of customizing the validationMessages: extending the default validation messages or providing your own loader. In the [demo](https://github.com/ouracademy/ng2-validation/tree/master/demo) there are an example of using both ways.\r\n\r\n### 1. Using defaultValidationMessages\r\nCreate your file of custom validation messages (for example `custom-validation`)\r\n```ts\r\nimport { defaultValidationMessages } from \'../src\';\r\n\r\n// An example of overriding the name field to super name\r\n//do the same with any validation message (min, required...)\r\ndefaultValidationMessages.customAttributes = {\r\n    \'name\': \'super name\'\r\n}; \r\n```\r\n\r\nAnd import it in your NgModule(for example the RootComponent):\r\n\r\n```ts\r\nimport { NgModule }      from \'@angular/core\';\r\nimport { AppComponent }           from \'./app.component\';\r\n//...import other modules\r\nimport { ValidationMessagesModule } from \'ng2-custom-validation\';\r\nimport \'./custom-validation\';\r\n\r\n@NgModule({\r\n  imports: [\r\n    //your modules\r\n    ValidationMessagesModule.forRoot()\r\n  ],\r\n  declarations: [ AppComponent ],\r\n  bootstrap:    [ AppComponent ]\r\n})\r\nexport class AppModule { }\r\n```\r\n\r\n### 2. Write and use your own loader\r\nIf you want to write your own loader, you need to create a class that implements ValidationMessagesLoader. The only required method is load() that must return an Observable. If your loader is synchronous, just use Observable.of to create an observable from your static value.\r\n\r\n```ts\r\nclass CustomLoader implements ValidationMessagesLoader {\r\n    load(): Observable<any> {\r\n        //Your implementation...\r\n    }\r\n}\r\n```\r\n\r\nOnce you\'ve defined your loader, you can provide it in your NgModule by adding it to its providers property. Don\'t forget that you have to import ValidationMessagesModule as well:\r\n\r\n```ts\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        //construct with your params\r\n        ValidationMessagesModule.forRoot({ provide: ValidationMessagesLoader, useFactory: () => new CustomLoader() }) \r\n    ],\r\n    exports: [ValidationMessagesModule],\r\n})\r\nexport class SharedModule {\r\n}\r\n```\r\n\r\n## TODO\r\nThis package it\'s creating on free times after university...and theses...\r\nFor now works with Reactive Driven Forms, it wasn\'t tested with Template Driven Forms. Probably it will work, if work send us a message.\r\nAlso it doesn\'t work with Composite Form Groups (and unique Controls) and doesn\'t have a way to add more ErrorPlaceholderParser (this is if you create your own Validator, you can\'t add it to the validation messages to show..this will be fixed soon).\r\n\r\nThere\'s a list of things that are in our roadmap. You can see it in the [TODO file](https://github.com/ouracademy/ng2-validation/blob/master/TODO)\r\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: '64c2a8a5ce6790356d06d542434e6997c28d71c6',
21 silly publish   _id: 'ng2-custom-validation@1.2.2',
21 silly publish   _shasum: '1299afcf8c8dcb439ff8dd9ffc1ecd587b6d7cb3',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name ng2-custom-validation
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'ng2-custom-validation',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   name: 'ng2-custom-validation',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/ng2-custom-validation
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading C:\Users\pc\AppData\Roaming\npm-cache\ng2-custom-validation\1.2.2\package.tgz
30 verbose request uri https://registry.npmjs.org/ng2-custom-validation
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 21:49:18
33 verbose request using bearer token for auth
34 verbose request id 70f05b8440d8bede
35 http request PUT https://registry.npmjs.org/ng2-custom-validation
36 http 403 https://registry.npmjs.org/ng2-custom-validation
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '115',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Sat, 07 Jan 2017 02:49:23 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-gru7124-GRU',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1483757361.294608,VS0,VE2273',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating C:\Users\pc\AppData\Roaming\npm-cache\registry.npmjs.org\ng2-custom-validation on PUT
39 error publish Failed PUT 403
40 verbose stack Error: you do not have permission to publish "ng2-custom-validation". Are you logged in as the correct user? : ng2-custom-validation
40 verbose stack     at makeError (C:\Users\pc\AppData\Roaming\nvm\v5.10.0\node_modules\npm\node_modules\npm-registry-client\lib\request.js:264:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (C:\Users\pc\AppData\Roaming\nvm\v5.10.0\node_modules\npm\node_modules\npm-registry-client\lib\request.js:252:14)
40 verbose stack     at Request._callback (C:\Users\pc\AppData\Roaming\nvm\v5.10.0\node_modules\npm\node_modules\npm-registry-client\lib\request.js:172:14)
40 verbose stack     at Request.self.callback (C:\Users\pc\AppData\Roaming\nvm\v5.10.0\node_modules\npm\node_modules\request\request.js:199:22)
40 verbose stack     at emitTwo (events.js:100:13)
40 verbose stack     at Request.emit (events.js:185:7)
40 verbose stack     at Request.<anonymous> (C:\Users\pc\AppData\Roaming\nvm\v5.10.0\node_modules\npm\node_modules\request\request.js:1036:10)
40 verbose stack     at emitOne (events.js:95:20)
40 verbose stack     at Request.emit (events.js:182:7)
40 verbose stack     at IncomingMessage.<anonymous> (C:\Users\pc\AppData\Roaming\nvm\v5.10.0\node_modules\npm\node_modules\request\request.js:963:12)
41 verbose statusCode 403
42 verbose pkgid ng2-custom-validation
43 verbose cwd c:\Users\pc\ng2-validation
44 error Windows_NT 10.0.14393
45 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish"
46 error node v5.10.0
47 error npm  v3.8.3
48 error code E403
49 error you do not have permission to publish "ng2-custom-validation". Are you logged in as the correct user? : ng2-custom-validation
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
